name: Build and Test GUI

# Workflow triggers on push or pull requests to the following branches
on:
  push:
    branches:
      - "development"     # Trigger on push to development branch
      - "main"            # Trigger on push to main branch
      - "feature/*"       # Trigger on push to any feature branch
  pull_request:
    branches:
      - "development"     # Trigger on PRs to development branch
      - "main"            # Trigger on PRs to main branch
      - "feature/*"       # Trigger on PRs to any feature branch
  workflow_dispatch:        # Allows manual trigger via GitHub UI

# Define the environment variables
env:
  JAVA_DISTRIBUTION: "corretto"
  JAVA_VERSION: '21'

# Define the jobs to be executed
jobs:
  # Build the project using Maven
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10   # Allow 10 minutes for the build to complete

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up the Java Development Kit (JDK) for Java 21 (using Corretto)
      - name: Set up JDK 21 Amazon Corretto
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: maven

      # Step 3: Build the project using Maven, but skip the tests for now
      - name: Build with Maven
        run: |
          mvn -B package --file OutbackWeatherTrackerApplication/pom.xml install -DskipTests

  # Run GUI tests, only after the build completes successfully
  test:
    needs: build    # Ensure the build job completes before running tests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      # Step 1: Checkout the code again
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up the JDK for running the tests
      - name: Set up JDK 21 for testing
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          cache: maven

      # Step 3: Run the GUI tests using Maven (specifically targeting UITests)
      - name: Run Maven GUI Tests
        run: mvn -B test --file OutbackWeatherTrackerApplication/pom.xml -Dtest="UITests.**.*Test"

      # Step 4: Archive the test results (store them as artifacts for debugging if tests fail)
      - name: Archive Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: target/surefire-reports
